generator client {
  provider = "prisma-client-js"
  output   = "../lib/app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id     String  @id @default(uuid())
  email  String  @unique
  name   String
  ban    Boolean @default(false)
  basket Basket?
  orders Order[]
}

model Admin {
  id       String @id @default(uuid())
  email    String @unique
  password String
  name     String
  posts    Post[] @relation("AdminPosts")
}

model Post {
  id        String  @id @default(uuid())
  title     String
  content   String?
  imageUrl  String
  price     Int
  published Boolean @default(true)
  authorId  String
  author    Admin   @relation("AdminPosts", fields: [authorId], references: [id])
}

model Basket {
  id     String       @id @default(uuid())
  userId String       @unique
  user   User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  items  BasketItem[]
}

model BasketItem {
  id       String @id @default(uuid())
  basketId String
  basket   Basket @relation(fields: [basketId], references: [id], onDelete: Cascade)
  title    String
  imageUrl String
  price    Int
  quantity Int    @default(1)
}

model Order {
  id        String      @id @default(uuid())
  userId    String
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  items     OrderItem[]
  createdAt DateTime    @default(now())
  status    String      @default("PENDING")
  address   String
  phone     String
  total     Int         @default(0)
}

model OrderItem {
  id       String @id @default(uuid())
  orderId  String
  order    Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  title    String
  imageUrl String
  price    Int
  quantity Int
}
